@page "/create"
@inject BlazorBlog.Client.Services.IBlogPostService BlogService
@inject NavigationManager NavigationManager

<h3>Create a New Blog Post</h3>

<EditForm Model="@newBlogPost" OnValidSubmit="CreateBlogPost">
    <DataAnnotationsValidator/>
    <div class="card">
        <div class="card-body">
            <div class="form-group">
                <label for="title">Title</label>
                <InputText id="title" @bind-Value="@newBlogPost.Title" class="form-control" />
                <ValidationMessage For="@(() => newBlogPost.Title)"/>
            </div>
            <div class="form-group">
                <label for="url">Url</label>
                <InputText id="url" @bind-Value="@newBlogPost.Url" class="form-control" />
                <ValidationMessage For="@(() => newBlogPost.Url)"/>
            </div>
            <div class="form-group">
                <label for="description">Description</label>
                <InputText id="description" @bind-Value="@newBlogPost.Description" class="form-control" />
            </div>
            <div class="form-group">
                <label for="content">Content</label>
                <InputTextArea id="content" @bind-Value="@newBlogPost.Content" class="form-control" />
            </div>
            <div class="form-group">
                <label for="datecreated">Date Created</label>
                <InputDate id="datecreated" @bind-Value="@newBlogPost.DateCreated" class="form-control" />
            </div>
            <div class="form-check">
                <InputCheckbox id="ispublished" @bind-Value="@newBlogPost.IsPublished" class="form-check-input" />
                <label for="ispublished">Publish</label>
            </div>
        </div>
        <div class="card-footer">
            <button type="submit" class="btn btn-primary">Create</button>
        </div>
    </div>  
</EditForm>
@code {
    BlazorBlog.Shared.BlogPost newBlogPost = new BlazorBlog.Shared.BlogPost();

    async Task CreateBlogPost()
    {
        var result = await BlogService.CreateBlogPost(newBlogPost);
        NavigationManager.NavigateTo($"/posts/{result.Url}");
    }
}
